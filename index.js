"use strict";function e(e){return e&&"object"==typeof e&&"default"in e?e.default:e}var t=e(require("bluebird")),r=e(require("fancy-log")),a=e(require("chalk")),n=e(require("lodash/isNull")),s=e(require("lodash/first")),i=e(require("lodash/lastIndexOf")),o=e(require("lodash/drop")),l=e(require("lodash/filter")),c=e(require("lodash/reject")),d=e(require("lodash/has")),u=e(require("path")),g=e(require("glob")),h=e(require("lodash/omit")),f=e(require("fs")),p=e(require("axios")),m=e(require("lodash/indexOf")),y=e(require("lodash/map")),w=e(require("lodash/find")),$=e(require("lodash/isArray")),b=e(require("lodash/join")),q=e(require("chokidar")),j=e(require("anymatch")),k=e(require("boxen"));const v=({api_key:e,password:t,domain:r})=>`https://${e}:${t}@${r}.myshopify.com`,_=(e,t="white",n=("object"==typeof e?a[t]([(null==e?void 0:e.message)?e.message+"\n\n\t":"",(null==e?void 0:e.data)?JSON.stringify(e.data.asset?h(e.data.asset,"attachment"):e.data):""].join("")):e))=>r(n),E={};function S(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function O(e,t){var r=t.get(e);if(!r)throw new TypeError("attempted to get private field on non-instance");return r.get?r.get.call(e):r.value}let x=0,I=0,A=40,B=!1;class F{constructor(){T.set(this,{writable:!0,value:[]}),S(this,"process",async()=>{B=!0;do{let e=A-(I+x);e<=0&&(e=0);let r=e*e;r<=.9&&(r=.9);const a=500/r,n=O(this,T).shift();await t.delay(a),this.request(n)}while(O(this,T).length>0);B=!1}),S(this,"request",async({target:e,request:t,reject:r,resolve:a})=>{let n,s=null;x+=1;try{const r=Object.assign({},t,{url:`${v(e)}${t.url}`});s=await p(r)}catch(n){return"Too Many Requests"===n.statusText?(_("Exceeded Shopify API limit, will retry...","yellow"),O(this,T).unshift({target:e,request:t,resolve:a,reject:r})):r(this.handleErrors(t,n))}if(x-=1,await a(s.data),s.data.errors)return r(s.data.errors);n=s.headers["x-shopify-shop-api-call-limit"],n=n.split("/"),I=parseInt(n[0],10),A=parseInt(n[1],10)}),S(this,"handleErrors",(e,t)=>{let r="",a="";if(!d(t.response,"data"))return{data:t.stack,message:t.name};const n=t.response.data;return(null==n?void 0:n.errors)?n.errors.asset?(a=e.data.asset.key,r=n.errors.asset):(r=n.errors,e.data&&(a=e.data.asset?`${e.data.asset.key} failed to upload`:`${e.method.toUpperCase()} ${e.url}`)):(a=`FAILED! ${t}`,r=t.statusText),{message:a,data:r}})}add(e,r){return new t((t,a)=>{O(this,T).push({target:e,request:r,resolve:t,reject:a}),B||this.process()})}}var T=new WeakMap;async function N(e,t){let r;E[e.domain]?r=E[e.domain]:(r=new F,E[e.domain]=r),await r.add(e,t)}const C=t.promisifyAll(require("fs"));async function D(){let e;try{const t=process.cwd(),r=u.join(t,".shopifysync");e=await C.readFileAsync(r,"utf8")}catch(e){throw new Error("The '.shopifysync' configuration is missing!")}try{e=JSON.parse(e)}catch(e){throw new Error("Your '.shopifysync' file is corrupt. JSON failed to parse")}return e}const P=t.promisifyAll(require("inquirer"));async function R(e,t,r=null){const a=t.target||null;if(!$(e.targets))throw new Error("No targets defined in the '.shopifysync' file");if(a){if(!(r=w(e.targets,{target_name:a})))throw new Error(`Could not find target '${targetName}'`)}else{const t=y(e.targets,e=>`[${e.target_name}] - '${e.theme_name}' at ${e.domain}.myshopify.com`);if(e.targets.length>1){const a=await P.prompt([{type:"list",name:"target",message:"Select target",default:null,choices:t}]);r=e.targets[m(t,a.target)]}else 1===e.targets.length&&(r=s(e.targets))}const n=Buffer.from(`${r.api_key}:${r.password}`);return r.auth=`Basic ${n.toString("base64")}`,r}function U(e,t={base:/[/\\]\./,count:0,files:null,log:null}){return e.ignore&&e.forceIgnore&&(t.count=e.ignore.length,t.log=b(e.ignore,a`\n\t {whiteBright - }`),e.ignore.push(t.base),t.files=e.ignore),{settings:e,ignored:t}}t.promisifyAll(f),f.mkdirp=require("mkdirp"),t.promisifyAll(f);const J=a`
  {green.bold Shopify Sync} – {bold Commands}
  {gray ---------------------------------------------------------}

  {bold Commands:}
    sync watch [options] – {gray.italic Watch theme folder}
    sync upload [options] [filter] – {gray.italic Upload theme files}
    sync download [options] [filter] – {gray.italic Download theme files}

  {bold Options:}
    --target=[target name] – {gray.italic Explicitly select theme target}
    --filter=[filename] – {gray.italic Only transfer files matching specified filter}
`;async function L(e,r){let h,m;try{e._?(h=s(e._),e._=e._.slice(1),e.file=!1):(h=e.resource,e.file=!0),console.log(e),"watch"===h?m=await async function(e,t){const r=await D(),s=await R(r,e);e.file||Object.assign(e,r);const l=e.dir||"theme",c=new RegExp(`^${l}`),{settings:g,ignored:h}=U(e);q.watch(`./${l}/`,{ignored:n(h.files)?h.base:h.files,persistent:!0,ignoreInitial:!0,usePolling:!0,interval:100,binaryInterval:100,cwd:process.cwd()}).on("all",async(e,r)=>{try{const n=r.split(u.sep),h=o(n,i(n,l)+1).join(u.sep);if(r.match(/^\..*$/)||!r.match(c))return _(a`{red Issue in match "/^\..*$/" at: ${r}}"`);if(r.match(/[()]/))return _(a`{red Filename cannot contain parentheses at: "${r}"`);if(d(g,"ignore")&&g.ignore.length>0&&j(g.ignore,r))return _(a`{gray Ignoring} '{gray ${r}}'`);if("change"===e||"add"===e){const e=await f.readFileAsync(r),n=e.toString("base64");await N(s,{method:"put",url:`/admin/themes/${s.theme_id}/assets.json`,data:{asset:{key:h.split(u.sep).join("/"),attachment:n}}}).then(n=>{_(a`{green Uploaded} '{green ${r}}'`),"function"==typeof t&&t.apply({file:u.parse(r),content:e})})}else"unlink"===e&&(await N(s,{method:"delete",url:`/admin/themes/${s.theme_id}/assets.json?asset[key]=${h.split(u.sep).join("/")}`}),_(a`{green Deleted} '{green ${r}}'`))}catch(e){const t=e.stack?e.stack:a`{red.bold ${e.data.length}} {red ${e.data.length>1?"Errors":"Error"}} {dim in} {red ${e.message}}
        \n  {red ${e.data.map((e,t)=>a`{bold ${t+1}}. `+e.replace(/(?:[{'%]{2}|\/).*?(?:[%'}]{2}|\/)|\(line\s[0-9]+\)/g,e=>"("===e[0]?a`{cyan.dim ${e}}`:"/"===e[0]?a`{magenta ${e}}`:a`{yellow ${e}}`+".")).join("\n  ")}}\n`;_(t)}});let p=a`  Target: {green ${s.target_name}}\n`+a`   Store: {green https://${s.domain}.myshopify.com}\n`+a`Watching: {green ${l}/**/**}`;n(h.log)||(p+=a`\nIgnoring: {yellow ${h.count}} Files\n`,p+=a`\t {whiteBright -} {yellow ${h.log}}`),await _(a.whiteBright.bold("Shopify Sync\n")+k(p,{padding:0,borderColor:"gray",dimBorder:!0,borderStyle:{topLeft:" ",topRight:" ",bottomLeft:" ",bottomRight:" ",horizontal:"-",vertical:" "}}))}(e,r):"upload"===h?m=await async function(e){let r=0;const n=await D(),h=await R(n,e);e.file||Object.assign(e,n);const p=e.dir||"theme",m=new RegExp(`^${p}/${s(e._)}`),{settings:y}=U(e),w=s(y._)?m:null;let $=g.sync(`${p}/**/*`,{nodir:!0});d(y,"ignore")&&y.ignore.length>0&&($=c($,e=>y.ignore.includes(e))),w&&($=l($,e=>w.test(e))),y.files&&($=y.files);const b=$.map(e=>{const t=e.split(u.sep),r=o(t,i(t,p)+1).join(u.sep);return{key:r,name:u.basename(r),path:e}});return await t.map(b,async e=>{const t=await f.readFileAsync(e.path);await N(h,{method:"put",url:`/admin/themes/${h.theme_id}/assets.json`,data:{asset:{key:e.key,attachment:t.toString("base64")}}}),r+=1,await _(a`{green Uploaded} '{green ${e.key}}'`)},{concurrency:y.concurrency}),`Uploaded ${r} files.`}(e):"download"===h?m=await async function(e){let r=0;const n=await D(),i=await R(n,e);e.file||Object.assign(e,n);const o=process.cwd(),g=e.dir||"theme",h=s(e._)?g:null,{settings:m}=U(e);try{const e=`${v(i)}/admin/themes/${i.theme_id}/assets.json`,{data:n}=await p.get(e);let{assets:s}=n;d(s,"ignore")&&m.ignore.length>0&&(s=c(s,e=>m.ignore.includes(e))),h&&(s=l(s,e=>h.test(e.key))),await t.map(s,(async function({attachment:e,value:t,key:n}){let s=null;e?s=Buffer.from(e,"base64"):t&&(s=Buffer.from(t,"utf8")),await f.mkdirp(u.join(o,g,u.dirname(n))),await f.writeFileAsync(u.join(o,g,n),s),r+=1,await _(a`{green Downloaded} '{green ${n}} to {green ${g}}'`)}),{concurrency:m.concurrency})}catch(e){console.error(e)}return`Downloaded ${r} files.`}(e):process.stdout.write(J),m&&process.stdout.write(m)}catch(e){let t=null;e.stack&&(t=e.stack),_(n(t)?e:t,"red")}return m}global.Promise=t,module.exports=function(e="",t,n){return"object"==typeof e?L(e):e?t.target?L(Object.assign({},{resource:e},{target:"",concurrency:20,dir:"theme",files:[],forceIgnore:!1,ignore:[]},t),n):r(a`{red Error! Please define a {bold theme target}!}`):r(a`{red Error! The {bold resource} option is missing}!`)};
